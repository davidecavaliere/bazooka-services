service: microgamma-users-service # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-west-2

  environment:
    MONGOURI: ${env:MONGODB_ATLAS_CLUSTER_URI, 'mongodb://192.168.254.2:27017/test'}
    DEBUG: ${env:DEBUG, ''}
    SECRET: ${env:SECRET, 'my-secure-secret'}
    DYNAMODB_TABLE: DDB3_${self:service}-${opt:stage, self:provider.stage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"


  apiGateway:
    restApiId:
      Fn::ImportValue: 'apiGateway-restApiId'
    restApiRootResourceId:
      Fn::ImportValue: 'apiGateway-rootResourceId'

plugins:
  - serverless-plugin-monorepo
  - '@microgamma/serverless-apigator'
  - serverless-dynamodb-local
  - serverless-offline

custom:
  entrypoint: lib/handler
  buildFolder: /home/developer/src/services/packages/users/lib
  dynamodb:
    start:
      migrate: true
    # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev

# you can overwrite defaults here
  stage: dev
  region: eu-west-2

package:
  exclude:
    ${file(../apigateway/excludes.yml)}


resources:
  Resources:
    UsersTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: email
            AttributeType: S

        KeySchema:
          -
            AttributeName: email
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: idIndex
            KeySchema:
              - AttributeName: id
                KeyType: HASH
            Projection:
              ProjectionType: KEYS_ONLY
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 5
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}